<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="application_creationCompleteHandler(event)">
	
	<mx:Canvas id="myCanvas" borderStyle="solid" height="100%" width="100%"/>
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			private var timer:Timer;
			
			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				timer = new Timer(10);
				timer.addEventListener(TimerEvent.TIMER, timer_updateHandler);
				timer.start();
				
				applicationRender();
			}
			
			protected function timer_updateHandler(event:TimerEvent):void
			{
				applicationRender();
			}
			
			private function applicationRender():void
			{
				var squareSize:uint = (myCanvas.height > myCanvas.width) ? myCanvas.width / 10 : myCanvas.height / 10;
				var w:uint = myCanvas.width;
				var h:uint = myCanvas.height;
				
				var dx:uint;
				if((dx = w - squareSize * 10) > 0)
				{
					dx = dx * .5;
				}
				
				var dy:uint;
				if((dy = h - squareSize * 10) > 0)
				{
					dy = dy * .5;
				}
				
				myCanvas.graphics.clear();
				
				var i:int;
				for(i = 0; i < 10; i++)
				{
					var j:int;
					for(j = 0; j < 10; j++)
					{
						//myCanvas.graphics.beginFill(0x000000, 1.0);
						//myCanvas.graphics.drawRect(j * squareSize, i * squareSize, squareSize, squareSize);
						
						myCanvas.graphics.beginFill(0x000000, 1.0);
						
						myCanvas.graphics.lineStyle(0, 0, .5);
						myCanvas.graphics.moveTo(dx + (squareSize) * i + squareSize / 2, dy + squareSize * j);
						myCanvas.graphics.lineTo(dx + (squareSize) * i + squareSize / 2, dy + squareSize * j);
						myCanvas.graphics.lineTo(dx + (squareSize) * i + squareSize,	 dy + squareSize * j + squareSize / 2);
						myCanvas.graphics.lineTo(dx + (squareSize) * i + squareSize / 2, dy + squareSize * j + squareSize);
						myCanvas.graphics.lineTo(dx + (squareSize) * i, 				 dy + squareSize * j + squareSize / 2);
						
						myCanvas.graphics.endFill();
					}
				}
				
				myCanvas.graphics.endFill();
			}
			
		]]>
	</fx:Script>
	
</s:WindowedApplication>
